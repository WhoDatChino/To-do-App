* {
  margin: 0;
  padding: 0;
}

button:focus {
  outline: none;
}
button:hover {
  cursor: pointer;
}

body {
  height: 100vh;
  width: 100%;
  /* background-image: linear-gradient(to bottom right, #c9cdd1, #6930c3); */
  /* position: relative; */
}

ul {
  list-style: none;
  /* display: flex;
  justify-content: space-between; */
}

/* HELP BUTTON */
.help-btn {
  border: solid 2px black;
  color: black;
  background-color: rgba(0, 0, 0, 0);
  text-decoration: none;
  font-size: 2rem;
  padding: 10px 20px;
  border-radius: 50%;
  position: fixed;
  right: 10%;
  transition: 250ms;
}

.help-btn:hover {
  border-radius: 15px;
}

/* SCROLL BAR */

/* width */
::-webkit-scrollbar {
  width: 7px;
}

/* Track */
::-webkit-scrollbar-track {
  background: rgba(144, 143, 143, 0);
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: rgba(194, 192, 192, 0.897);
  border-radius: 4px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: rgb(141, 140, 140);
}

/* CONTAINER */
.container {
  height: 90vh;
  width: 85%;
  /* min-width: 70rem */
  /* max-width: 120rem;
  min-height: 117rem;
  margin: 4vw auto; */
  background-color: beige;
  align-items: center;
  align-content: center;
  margin: 6rem auto;
  display: flex;
  border-radius: 20px;
  overflow: hidden;
}

/* LEFT SIDE */
.lists-column {
  flex: 3;
  background-color: blue;
  height: 100%;
  color: honeydew;
  display: flex;
  align-items: center;
  justify-content: center;
}

.lists-column .list-previews {
  height: 90%;
  width: 80%;
  background-color: tomato;
}

.list-previews {
  display: flex;
  align-items: center;
  flex-direction: column;
  /* justify-content: space-between; */
  overflow-y: auto;
}

/* List element */
.lists-column .list-element {
  min-height: 8rem;
  width: 100%;
  background-color: indigo;
  margin: 1.3rem 0;
  box-sizing: border-box;
  border: black 3px solid;
  border-radius: 20px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

.list-previews :first-child {
  margin-top: 0;
  background-color: chartreuse;
}

.list-element h2 {
  margin: auto auto;
  font-size: 2rem;
}

.no-lists ion-icon {
  font-size: 4rem;
  margin-right: 1rem;
}

.list-element .colour-line {
  height: 100%;
  width: 0.5rem;
  background-color: green;
  border-right: black 3px solid;
}

/* RIGHT SIDE */
.list-container {
  flex: 5;
  background-color: greenyellow;
  height: 100%;
  color: honeydew;
  display: flex;
  align-items: center;
  justify-content: center;
}

.list-container .list-view {
  height: 90%;
  width: 87%;
  background-color: tomato;
  display: flex;
  align-items: center;
  justify-content: center;
}

.add-new-list {
  max-width: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

/* New list button */
.add-new-list .new-list-btn ion-icon {
  font-size: 104px;
  color: rgb(13, 144, 1);
}
.add-new-list .new-list-btn {
  border-radius: 50%;
  background-color: rgba(128, 128, 128, 0);
  border: solid black 2px;
}
.add-new-list h2 {
  margin-top: 1rem;
}

/* LIST-VIEW-EXPANDED */
.list-view-expanded {
  width: 99%;
  height: 99%;
  background-color: violet;
  border-radius: 20px;
  overflow: hidden;
  border: solid 2px black;
  display: flex;
  flex-direction: column;
}

.list-view-expanded .colour-line {
  width: 100%;
  height: 3%;
  background-color: green;
  border-bottom: black solid 2px;
}

/* List title */
.list-view-expanded .list-title {
  flex: 1.5;
  background-color: cadetblue;
}

.list-view-expanded .list-items {
  flex: 8;
  background-color: indianred;
  overflow-y: scroll;
  align-items: center;
}

/* List Items */
.list-items .list-item {
  min-height: 4rem;
  width: 95%;
  background-color: mediumspringgreen;
  margin: 2rem auto;
  display: flex;
  align-items: center;
  /* justify-content: space-between; */
  font-size: 2.5rem;
  border-top-left-radius: 30px;
  border-bottom-left-radius: 30px;
}

.list-item .item-info {
  flex: 3;
  position: relative;
  /* align-items: center; */
  /* display: flex;
  justify-content: flex-start;
  background-color: blue; */
}
.list-item .item-info {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  font-size: 2.5rem;
  margin: 0 1.5rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* To create a custom checkbox, you need to hide the original default checkbox and use the label element to create the custom box that will be used in your click event */
/* Label element is an in-line element. To give it a width & height you need to transform to inline block or block level */
.checkmark {
  display: block;
  width: 2.5rem;
  height: 2.5rem;
  box-sizing: border-box;
  border-radius: 50%;
  background-color: rgba(220, 220, 220, 0);
  border: 3px solid rgb(153, 153, 153);
  position: relative;
  transition: background-color 0.4s;
}
/* For click event, use pseudo class checked whhich allows the application of styles when a checkbox is checked */
/* selecting id of check and the psuedo class we want. To select <label> use a css combinator called general sibling selector '~'. then need the class name of checkmark */
.check:checked ~ .checkmark {
  background-color: rgb(153, 153, 153);
  border: none;
}

/* Checkmark sign created using ::after */
.checkmark::after {
  content: "";
  position: absolute; /* parent needs to be positioned relatively for this to work*/
  width: 0.35rem;
  height: 0.7rem;
  border-right: oldlace 2px solid;
  border-bottom: oldlace 2px solid;
  /* Positioning the checkmark */
  top: 45%;
  left: 50%;
  transform: translate(-50%, -50%) rotateZ(45deg);
  opacity: 0;
  transition: all 0.4s;
}
.check:checked ~ .checkmark::after {
  opacity: 1;
}
/* Making default checkbox overlap new one cz click event wasnt registering on subsequent items. Default box then made invisible but user still interacts w/ it but sees the new one */
.item-info input {
  position: absolute;
  z-index: 10;
  width: 2.5rem;
  height: 2.5rem;
  opacity: 0;
}

/* Checkbox styling: */
.high_pri .checkmark {
  border: 3px solid rgb(199, 50, 50);
}
.high_pri .check:checked ~ .checkmark {
  background-color: rgb(199, 70, 70);
}
.medium_pri .checkmark {
  border: 3px solid rgb(226, 120, 35);
}
.medium_pri .check:checked ~ .checkmark {
  background-color: rgb(226, 140, 55);
}
.low_pri .checkmark {
  border: 3px solid rgb(57, 154, 219);
}
.low_pri .check:checked ~ .checkmark {
  background-color: rgb(57, 174, 239);
}

/* Completed item */
.list-item.completed {
  background-color: rgb(184, 182, 182);
  text-decoration: line-through;
}

.item-info h2 {
  font-size: 2rem;
  margin: 0 1.5rem;
}

.list-item .item-interactions {
  flex: 1;
  display: flex;
  justify-content: space-between;
  /* background-color: blue; */
}
.item-interactions .expand-item {
  margin: 0 2rem;
}
.item-interactions .delete-item {
  margin-right: 1.5rem;
}

/* List options */
.list-view-expanded .list-options {
  flex: 2;
  background-color: lightgreen;
  display: flex;
  align-items: center;
  justify-content: space-around;
}

.list-options button {
  border-radius: 50%;
  height: 4.5rem;
  width: 4.5rem;
  border: black 2px solid;
  align-content: center;
}

.delete-list-btn ion-icon {
  font-size: 3rem;
}
.add-item-btn ion-icon {
  font-size: 4.3rem;
}

.list-colour-btn {
  background-color: green;
}

.list-options div {
  display: flex;
  flex-direction: column;
  background-color: hotpink;
  align-items: center;
}
