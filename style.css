* {
  margin: 0;
  padding: 0;
}

:root {
  --grey-theme: #5d6d7e;
  --orange-theme: #ff7f54;
  --yellow-theme: #fcd143;
  --red-theme: #a73958;
  --purple-theme: #ce89fc;
  --pink-theme: #ff8f8b;
  --green-theme: #3cb371;
  --blue-theme: #00eaff;
  --bright-theme: #33ff86;

  --purple-branding: #683881;
  --blue-branding--1: #0f92b6;
  --blue-branding--2: #00c9b7;
}

button:focus {
  outline: none;
}
button:hover {
  cursor: pointer;
}

ion-icon {
  pointer-events: none;
}

body {
  min-height: 100vh;
  background-image: linear-gradient(
    to top right,
    var(--purple-branding),
    var(--blue-branding--1),
    var(--blue-branding--2)
  );
  background-size: cover;
  background-repeat: no-repeat;
  font-family: "Montserrat", sans-serif;
}

/* HELP BUTTON */
.help-btn {
  border: solid 2px black;
  color: black;
  background-color: rgba(0, 0, 0, 0);
  text-decoration: none;
  font-size: 2rem;
  padding: 10px 20px;
  border-radius: 50%;
  position: fixed;
  right: 10%;
  transition: 250ms;
}

.help-btn:hover {
  border-radius: 15px;
}

/* SCROLL BAR */

/* width */
::-webkit-scrollbar {
  width: 7px;
}

/* Track */
::-webkit-scrollbar-track {
  background: rgba(144, 143, 143, 0);
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: rgba(126, 125, 125, 0.897);
  border-radius: 4px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: rgb(175, 173, 173);
}

/* CONTAINER */
.container {
  /* height: 90vh;
  width: 85%; */
  max-width: 100rem;
  height: 60rem;
  background-image: linear-gradient(
    to bottom left,
    rgba(255, 255, 255, 0.7),
    rgba(255, 255, 255, 0.459)
  );
  filter: drop-shadow(0 0 0.8rem rgb(51, 50, 50));
  align-items: center;
  margin: 6rem auto 1rem auto;
  display: flex;
  border-radius: 20px;
  overflow: hidden;
}

/* LEFT SIDE */
.lists-column {
  flex: 3;
  height: 90%;
  color: rgb(109, 109, 109);
  display: flex;
  align-items: center;
  flex-direction: column;
  border-radius: 0 20px 20px 0;
}

.lists-column .list-previews {
  height: 90%;
  width: 80%;
}

.list-previews {
  display: flex;
  align-items: center;
  flex-direction: column;
  overflow-y: scroll;
  padding-top: 12px;
}

/* List element */
.lists-column .list-element {
  min-height: 8rem;
  width: 90%;
  background-image: linear-gradient(
    to left top,
    rgba(255, 255, 255, 0.911),
    rgba(255, 255, 255, 0.247)
  );
  box-shadow: 6px 6px 20px rgba(128, 128, 128, 0.239);
  margin: 1.3rem 0;
  box-sizing: border-box;
  border-radius: 20px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  transition: transform 100ms ease-in-out;
}
.list-element {
  cursor: pointer;
}
.list-element.no-lists {
  pointer-events: none;
}
.list-element:hover {
  background-color: white;
}
.list-element.active {
  border: var(--grey-theme) 2px solid;
  border-left: none;
  box-shadow: 3px 3px 15px rgb(109, 109, 109);
  background-color: white;
  transform: scale(1.04);
}

.list-previews :first-child {
  margin-top: 0;
}

.list-element h2 {
  margin: auto auto;
  font-size: 2rem;
  pointer-events: none;
}

.list-element .colour-line {
  height: 100%;
  width: 0.75rem;
  background-color: var(--grey-theme);
  pointer-events: none;
}

/* New list button */
.add-new-list {
  max-width: auto;
  display: flex;
  align-items: center;
  flex-direction: column;
  margin-top: 1rem;
}

.add-new-list .new-list-btn ion-icon {
  font-size: 90px;
  color: var(--purple-branding);
  transition: all 250ms ease-out;
}

.add-new-list .new-list-btn {
  border-radius: 50%;
  background-color: rgba(128, 128, 128, 0);
  border: solid rgba(104, 102, 102) 5px;
}
.add-new-list h2 {
  margin-top: 0.6rem;
}

/* Empty list */
.no-lists ion-icon {
  font-size: 4rem;
  margin-right: 1rem;
  color: var(--purple-branding);
}

/* RIGHT SIDE */
.list-container {
  flex: 5;
  background-image: linear-gradient(
    to bottom left,
    rgba(255, 255, 255, 0.719),
    rgba(255, 255, 255, 0.294)
  );
  height: 100%;
  color: rgb(119, 119, 119);
  display: flex;
  align-items: center;
  justify-content: center;
}

.list-container .list-view {
  height: 90%;
  width: 87%;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* LIST-VIEW-EXPANDED */
.list-view-expanded {
  width: 99%;
  height: 99%;
  border-radius: 20px;
  overflow: hidden;
  border: solid 3px rgba(104, 102, 102);
  box-shadow: 6px 6px 20px rgba(128, 128, 128, 0.521);
  display: flex;
  flex-direction: column;
}

.list-view-expanded .colour-line {
  width: 100%;
  height: 3%;
  background-color: var(--grey-theme);
  border-bottom: rgba(104, 102, 102) solid 3px;
}

/* LIST TITLE */
.list-view-expanded .list-title {
  flex: 1.5;
  min-height: 7rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: rgb(104, 102, 102) 3px solid;
  position: relative;
}

/* list Title - no form */
.no-form {
  width: 100%;
  max-height: 80%;
  padding: 10px;
  display: flex;
  align-items: center;
  overflow: hidden;
  justify-content: space-between;
}
.list-title h1 {
  margin: 1rem;
  font-size: 3.5rem;
}
.list-title button {
  height: 4rem;
  min-width: 4rem;
  border-radius: 50%;
  margin-right: 1.5rem;
  margin-left: 1rem;
  margin: auto 1.5rem auto 1rem;
  border: none;
  box-shadow: 4px 4px 10px rgba(7, 7, 7, 0.239);
}
.list-title ion-icon {
  font-size: 2rem;
  color: var(--purple-branding);
  pointer-events: none;
}

/* List title - W/ form */
.list-title .form {
  width: 100%;
  height: 90%;
  margin: 0.5rem 0.5rem;
}
.change-list-title-form {
  height: 100%;
  align-items: center;
  position: relative;
  display: grid;
  grid-template-columns: 6fr 1fr;
  border-radius: 9px;
  gap: 1rem;
  overflow-x: scroll;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.form .input-list-title {
  height: 3.5rem;
  background-color: rgba(255, 0, 255, 0);
  border: none;
  font-size: 3.5rem;
}
.input-list-title-btn {
  width: 4rem;
  height: 4rem;
  border-radius: 50%;
  color: white;
  font-weight: bold;
  background-image: linear-gradient(
    to top right,
    var(--purple-branding),
    var(--blue-branding--1)
  );
  border: none;
  cursor: pointer;
  transition: all ease-in-out 250ms;
  margin: 1rem 1rem;
  box-shadow: 4px 5px 5px rgba(7, 7, 7, 0.239);
}
/* .input-list-title-btn:hover {
  box-shadow: 2px 2px 13px var(--purple-branding);
} */

.list-view-expanded .list-items {
  flex: 8;
  overflow-y: scroll;
  align-items: center;
}

/* List Items */
.list-items .list-item {
  min-height: 4rem;
  width: 95%;
  margin: 2rem auto;
  display: flex;
  align-items: center;
  font-size: 2.5rem;
  border-top-left-radius: 30px;
  border-bottom-left-radius: 30px;
}

.list-item .item-info {
  flex: 3;
  position: relative;
}
.list-item .item-info {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  font-size: 2.5rem;
  margin: 0 1.5rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* To create a custom checkbox, you need to hide the original default checkbox and use the label element to create the custom box that will be used in your click event */
/* Label element is an in-line element. To give it a width & height you need to transform to inline block or block level */
.checkmark {
  /* display: block; */
  min-width: 2.5rem;
  height: 2.5rem;
  box-sizing: border-box;
  border-radius: 50%;
  background-color: rgba(220, 220, 220, 0);
  border: 3px solid rgb(153, 153, 153);
  position: relative;
  transition: background-color 0.4s;
}
/* For click event, use pseudo class checked whhich allows the application of styles when a checkbox is checked */
/* selecting id of check and the psuedo class we want. To select <label> use a css combinator called general sibling selector '~'. then need the class name of checkmark */
.check:checked ~ .checkmark {
  background-color: rgb(153, 153, 153);
  border: none;
}

/* Checkmark sign created using ::after */
.checkmark::after {
  content: "";
  position: absolute; /* parent needs to be positioned relatively for this to work*/
  width: 0.35rem;
  height: 0.7rem;
  border-right: oldlace 2px solid;
  border-bottom: oldlace 2px solid;
  /* Positioning the checkmark */
  top: 45%;
  left: 50%;
  transform: translate(-50%, -50%) rotateZ(45deg);
  opacity: 0;
  transition: all 0.4s;
}
.check:checked ~ .checkmark::after {
  opacity: 1;
}
/* Making default checkbox overlap new one cz click event wasnt registering on subsequent items. Default box then made invisible but user still interacts w/ it but sees the new one */
.item-info input {
  position: absolute;
  z-index: 10;
  width: 2.5rem;
  height: 2.5rem;
  opacity: 0;
  cursor: pointer;
}

/* Checkbox styling: */
.high_pri .checkmark {
  border: 3px solid rgb(199, 50, 50);
}
.high_pri .check:checked ~ .checkmark {
  background-color: rgb(199, 70, 70);
}
.medium_pri .checkmark {
  border: 3px solid rgb(226, 120, 35);
}
.medium_pri .check:checked ~ .checkmark {
  background-color: rgb(226, 140, 55);
}
.low_pri .checkmark {
  border: 3px solid rgb(57, 154, 219);
}
.low_pri .check:checked ~ .checkmark {
  background-color: rgb(57, 174, 239);
}

/* Completed item */
.list-item.completed {
  background-color: rgb(167, 167, 167);
  background-image: none;
  text-decoration: line-through;
}

.item-info h2 {
  font-size: 2rem;
  margin: 0 1.5rem;
}

/* Expanded item */
.full-list-item {
  position: relative;
}

.full-list-item .list-item {
  margin-bottom: 0;
}

.list-additional-info {
  max-height: 0;
  overflow: hidden;
  width: 75%;
  margin: 0 0 2rem 50%;
  background-image: linear-gradient(
    to top,
    rgba(180, 179, 179, 0.698),
    rgba(255, 255, 255, 0)
  );
  border-radius: 0 0 15px 15px;
  left: 50%;
  transform: translate(-50%);
  transition: max-height 350ms ease-out;
}
.list-additional-info.expanded {
  max-height: 10rem;
}

.list-additional-info :first-child {
  padding-top: 1rem;
}
.extra-info {
  padding-bottom: 1rem;
  margin: 0 1rem 0 1rem;
}
.extra-info span {
  font-weight: bold;
  font-size: 1.05rem;
}

/* Item interactions */
.list-item .item-interactions {
  flex: 1;
  display: flex;
  justify-content: space-between;
}
.expand-item-btn,
.delete-item-btn {
  background-color: rgba(222, 184, 135, 0);
  border-color: rgba(95, 158, 160, 0);
  margin: 0 1rem;
  padding: 0 1rem;
  transition: all 250ms ease-out;
}
.item-interactions .expand-item,
.delete-item {
  font-size: 3rem;
}
/* button animation */
.expand-item-btn:hover {
  /* transform: rotate(180deg); */
  color: rgb(61, 61, 61);
}
.delete-item-btn:hover,
.delete-list-btn:hover {
  color: rgb(149, 48, 48);
}

/* List options */
.list-view-expanded .list-options {
  flex: 2;
  display: flex;
  align-items: center;
  justify-content: space-around;
}

.list-options button {
  border-radius: 50%;
  height: 4.5rem;
  width: 4.5rem;
  border: solid rgba(104, 102, 102) 2px;
  align-content: center;
  background-color: #67388100;
  position: relative;
}

.delete-list-btn ion-icon {
  font-size: 3rem;
  transition: all 250ms ease-out;
}

.add-item-btn ion-icon {
  font-size: 4.3rem;
  color: var(--purple-branding);
  transition: all 250ms ease-out;
}

.list-options .list-colour-btn {
  background-color: var(--grey-theme);
}

.list-options div {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.list-options h2 {
  margin-top: 0.5rem;
}

.list-options .list-colour-options {
  position: absolute;
  height: 20rem;
  width: 20rem;
  z-index: 21;
  border-radius: 20px;
  background-image: linear-gradient(
    to right bottom,
    rgb(255, 255, 255),
    rgb(223, 222, 222)
  );
  box-shadow: 6px 6px 20px rgba(44, 44, 44, 0.541);
  justify-content: center;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  transform: translateY(-110%);
}
.list-colour-options .list-colour-btn {
  margin: auto auto;
  height: 4rem;
  width: 4rem;
  transition: all 200ms ease-in-out;
  border: none;
}

.list-colour-options.hidden {
  display: none;
}

.list-colour-options .list-colour-btn.colour-option.A {
  background-color: var(--bright-theme);
}
.list-colour-options .list-colour-btn.colour-option.A:hover {
  box-shadow: 1px 1px 30px -8px var(--bright-theme),
    -1px -1px 30px -8px var(--bright-theme);
  border: rgba(0, 128, 0, 0);
}
.list-colour-options .list-colour-btn.colour-option.B {
  background-color: var(--blue-theme);
}
.list-colour-options .list-colour-btn.colour-option.B:hover {
  box-shadow: 1px 1px 30px -8px var(--blue-theme),
    -1px -1px 30px -8px var(--blue-theme);
  border: rgba(0, 128, 0, 0);
}
.list-colour-options .list-colour-btn.colour-option.C {
  background-color: var(--green-theme);
}
.list-colour-options .list-colour-btn.colour-option.C:hover {
  box-shadow: 1px 1px 30px -8px var(--green-theme),
    -1px -1px 30px -8px var(--green-theme);
  border: rgba(0, 128, 0, 0);
}
.list-colour-options .list-colour-btn.colour-option.D {
  background-color: var(--pink-theme);
}
.list-colour-options .list-colour-btn.colour-option.D:hover {
  box-shadow: 1px 1px 30px -8px var(--pink-theme),
    -1px -1px 30px -8px var(--pink-theme);
  border: rgba(0, 128, 0, 0);
}
.list-colour-options .list-colour-btn.colour-option.H {
  background-color: var(--orange-theme);
}
.list-colour-options .list-colour-btn.colour-option.H:hover {
  box-shadow: 1px 1px 30px -8px var(--orange-theme),
    -1px -1px 30px -8px var(--orange-theme);
  border: rgba(0, 128, 0, 0);
}
.list-colour-options .list-colour-btn.colour-option.F {
  background-color: var(--red-theme);
}
.list-colour-options .list-colour-btn.colour-option.F:hover {
  box-shadow: 1px 1px 30px -8px var(--red-theme),
    -1px -1px 30px -8px var(--red-theme);
  border: rgba(0, 128, 0, 0);
}
.list-colour-options .list-colour-btn.colour-option.G {
  background-color: var(--yellow-theme);
}
.list-colour-options .list-colour-btn.colour-option.G:hover {
  box-shadow: 1px 1px 30px -8px var(--yellow-theme),
    -1px -1px 30px -8px var(--yellow-theme);
  border: rgba(0, 128, 0, 0);
}
.list-colour-options .list-colour-btn.colour-option.E {
  background-color: var(--purple-theme);
}
.list-colour-options .list-colour-btn.colour-option.E:hover {
  box-shadow: 1px 1px 30px -8px var(--purple-theme),
    -1px -1px 30px -8px var(--purple-theme);
  border: rgba(35, 49, 35, 0);
}
.list-colour-options .list-colour-btn.colour-option.I {
  background-color: var(--grey-theme);
}
.list-colour-options .list-colour-btn.colour-option.I:hover {
  box-shadow: 1px 1px 30px -8px var(--grey-theme),
    -1px -1px 30px -8px var(--grey-theme);
  border: rgba(0, 128, 0, 0);
}

.hidden {
  display: none;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 110%;
  background-color: rgba(0, 0, 0, 0.582);
  background-repeat: no-repeat;
  backdrop-filter: blur();
  z-index: 15;
}

.form-container {
  width: 60rem;
  height: 40rem;
  margin: auto;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 22;
  background-image: linear-gradient(
    to bottom left,
    rgb(255, 255, 255),
    rgb(194, 193, 193)
  );
  border-radius: 15px;
}

.new-list-item-form {
  position: relative;
  display: grid;
  grid-template-columns: 1fr 2.5fr;
  border-radius: 9px;
  box-sizing: border-box;
  align-items: center;
  gap: 1rem;
  padding: 2rem;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 45rem;
  height: 40rem;
}

.new-list-item-form label {
  font-size: 1.5rem;
  font-weight: bold;
  color: rgb(116, 115, 115);
}
.new-list-item-form input,
textarea,
select {
  font-size: 1.5rem;
  padding: 0.8rem 1rem;
  border: 1px solid #ddd;
  border-radius: 0.5rem;
  transition: all 0.2s;
}

.new-list-item-form .action-btns {
  grid-column: 1 / span 2;
  justify-self: center;
  margin-top: 1rem;
}

.action-btns .add-btn,
.cancel-btn,
.delete-btn {
  width: 10rem;
  height: 3rem;
  align-items: center;
  margin: 1rem;
  font-size: 2rem;
  border-radius: 1.5rem;
  color: rgb(255, 255, 255);
  transition: all 250ms ease-in-out;
}
.add-btn,
.delete-btn {
  background-image: linear-gradient(
    to top right,
    var(--purple-branding),
    var(--blue-branding--1)
  );
  border: none;
}
.add-btn:hover,
.delete-btn:hover {
  box-shadow: 2px 2px 20px var(--blue-branding--1);
  transform: scale(1.05);
}
.cancel-btn {
  color: rgb(116, 115, 115);
  border: none;
}
.cancel-btn:hover {
  box-shadow: 2px 2px 20px rgb(149, 48, 48);
}

.success-message {
  width: 20rem;
  height: 10rem;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 30;
  color: white;
  background-color: var(--purple-branding);
  border-radius: 15px;
  display: flex;
  box-sizing: border-box;
  padding: 10px;
  align-items: center;
  box-shadow: 2px 2px 30px var(--purple-branding);
}

.success-message ion-icon,
.delete-list-message ion-icon {
  font-size: 4rem;
  margin: 0 1rem 0 1rem;
}
.success-message.hidden,
.delete-list-message.hidden,
.form.hidden,
.no-lists.hidden {
  display: none;
}
.delete-list-message {
  width: 40rem;
  height: 20rem;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 30;
  color: white;
  background-color: var(--purple-branding);
  border-radius: 15px;
  box-sizing: border-box;
  padding: 10px;
  align-items: center;
  box-shadow: 2px 2px 30px var(--purple-branding);
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}

.delete-list-message .content {
  display: flex;
  margin-top: 3rem;
}
.delete-list-message .delete-list-btns {
  display: flex;
}
.delete-btn,
.delete-list-btns .cancel-btn {
  font-size: 1.5rem;
}
